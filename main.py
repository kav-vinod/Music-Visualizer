import requests

#need an API to obtain the lyrics of a song and pass it in to the OPEN AI API one by one 

#call's powerlyric's API to obtain lyrics for a specific song
def obtain_lyrics(song, artist):
    url = "https://powerlyrics.p.rapidapi.com/getlyricsfromtitleandartist"

    querystring = {"title":song,"artist":artist}

    headers = {
	    "X-RapidAPI-Key": "5b0bbf0a38msh5beda3292b82aaap1ca0d9jsnb643b686d994",
	    "X-RapidAPI-Host": "powerlyrics.p.rapidapi.com"
    }
    response = requests.request("GET", url, headers=headers, params=querystring)
    json_lyrics = response.json()
    lyrics = json_lyrics['lyrics']
    return lyrics

#separates lyrics into an array of verses 
def create_array(lyrics):
    lyric_array = []
    paragraph = ""
    for i in range(0, len(lyrics) - 1):
        paragraph = paragraph + lyrics[i]
        if lyrics[i] == '\n' and lyrics[i + 1] == '\n':
            lyric_array.append(paragraph)
            paragraph = ""
    return lyric_array

#call's Open AI's text generator API to obtain a description of an image based on the imagery described in each verse + themes present in the verse
def obtain_image_desc(lyrics):
    #dict of parameters to pass into API request
    my_headers = { 'Content-Type' : 'application/json', 'Authorization' : 'Bearer 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'}
    #lyrics = "The drink you spilt all over me / 'Lover's Spit' left on repeat / My mom and dad let me stay home / It drives you crazy getting old"
    
    #API endpoint URL
    url = 'https://api.openai.com/v1/completions'

    model_info = {
        'model': 'text-davinci-003',
        'prompt': "Provide descriptive language that could be used to construct an image based on the setting present in these lyrics: " + lyrics + " with the response being under 350 characters (including spaces)",
        'max_tokens': 2048,
        'temperature': 0,
    }

    #API request to obtain data for each song 
    response = requests.post(url, headers=my_headers, json=model_info)
    json_description = response.json()
    return json_description['choices'][0]['text']

#call's DALL-E API to obtain the url of an image generated by DALL-E based on the description provided by the Open AI text generator 
def obtain_image_url(image_desc, art_style):
    my_headers = { 'Content-Type' : 'application/json', 'Authorization' : 'Bearer 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'}
    url = 'https://api.openai.com/v1/images/generations'
    
    image_param = {
        'prompt':image_desc + " " + art_style,
        'n':1,
        'size':'1024x1024'
    }

    response = requests.post(url, headers=my_headers, json=image_param)
    json_images = response.json()
    print(json_images['data'][0]['url'])

#def create_movie():

song = "Lavender Haze"
artist = "Taylor Swift"
style = "digital art"
#obtain lyrics 
song_lyrics = obtain_lyrics(song, artist)

#separate lyrics into array of verses  
lyric_array = create_array(song_lyrics)

#create array of descriptions for each verse 
descriptions = []
image_desc = ""
for i in range(0, len(lyric_array)):
    image_desc = obtain_image_desc(lyric_array[i])
    descriptions.append(image_desc)

#create an image based on each description - image given in a url 
for i in descriptions:
    obtain_image_url(i, style)
    print('\n')

#obtain_image_desc(lyrics)
test_string = "The spilled drink trickles down my body, staining my clothes with its sweet aroma. The air is filled with the melodic hum of 'Lover's Spit', creating a peaceful atmosphere. I'm grateful for the freedom of being able to stay home, but the thought of growing older is daunting."
style = "digital art"
#obtain_image_url(test_string, style)
